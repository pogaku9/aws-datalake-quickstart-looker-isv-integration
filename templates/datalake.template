{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Cloudwick Data lake quick start deployment master template.(qs-1ngojrss0)",
    "Parameters": {
        "AdministratorEmail": {
            "AllowedPattern": "^[a-z0-9]+(\\.[_a-z0-9]+)*@[a-z0-9-]+(\\.[a-z0-9-]+)*(\\.[a-z]{2,15})$",
            "ConstraintDescription": "Can contain only ASCII characters.",
            "Description": "Admin email id - email will be sent to this address on stack completion with further instructions (check inbox/spam in about 15-20mins)",
            "Type": "String"
        },
        "AdministratorName": {
            "ConstraintDescription": "Can contain only ASCII characters.",
            "Default": "AdminName",
            "Description": "Admin name",
            "Type": "String"
        },
        "RDSDatabaseName": {
            "AllowedPattern": "[a-zA-Z][a-zA-Z0-9]*",
            "ConstraintDescription": "DB name must start with a letter & no special characters(Min=4;Max=20 AlphaNumerics)",
            "Default": "awsdatalakeqs",
            "Description": "DB Name must start with a letter & no special characters(MinLength=4;MaxLength=20)",
            "MaxLength": "16",
            "MinLength": "4",
            "Type": "String"
        },
        "RDSUsername": {
            "AllowedPattern": "[a-zA-Z][a-zA-Z0-9]*",
            "ConstraintDescription": "DB Username must start with a letter & no special characters(Min=4;Max=20 AlphaNumerics)",
            "Default": "admin",
            "Description": "DB Username must start with a letter & no special characters(MinLength=4;MaxLength=20)",
            "MaxLength": "16",
            "MinLength": "4",
            "Type": "String"
        },
        "RDSPassword": {
            "AllowedPattern": "(?=^.{6,255}$)((?=.*\\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*",
            "ConstraintDescription": "Must be at least 8 characters containing letters, numbers and symbols.",
            "Description": "DB Password. Must be at least 8 characters containing letters, numbers and symbols",
            "MaxLength": "16",
            "MinLength": "8",
            "NoEcho": "true",
            "Type": "String"
        },
        "ElasticsearchInstanceCount": {
            "Default": "1",
            "Description": "Elasticsearch instance count",
            "Type": "Number"
        },
        "ElasticsearchInstanceType": {
            "AllowedValues": [
                "t2.medium.elasticsearch",
                "m3.medium.elasticsearch",
                "m3.large.elasticsearch",
                "m3.xlarge.elasticsearch",
                "m3.2xlarge.elasticsearch"
            ],
            "Default": "t2.medium.elasticsearch",
            "Description": "Elasticsearch instance type",
            "Type": "String"
        },
        "ElasticsearchVolumeSize": {
            "Default": "20",
            "Description": "Elasticsearch instance Volume size (in GiB)",
            "Type": "Number"
        },
        "ElasticsearchVolumeType": {
            "AllowedValues": [
                "gp2",
                "standard",
                "io1"
            ],
            "Default": "gp2",
            "Description": "Elasticsearch instance Volume type",
            "Type": "String"
        },
        "PortalInstanceType": {
            "AllowedValues": [
                "m1.medium",
                "m1.large",
                "m1.xlarge",
                "m2.xlarge",
                "m2.2xlarge",
                "m2.4xlarge",
                "m3.medium",
                "m3.large",
                "m3.xlarge",
                "m3.2xlarge",
                "c1.medium",
                "c1.xlarge",
                "c3.large",
                "c3.xlarge",
                "c3.2xlarge",
                "c3.4xlarge",
                "c3.8xlarge"
            ],
            "ConstraintDescription": "Must be a valid EC2 instance type",
            "Default": "m1.medium",
            "Description": "EC2 WebServer instance type for datalake web portal",
            "Type": "String"
        },
        "KeyPairName": {
            "ConstraintDescription": "Can contain only ASCII characters.",
            "Description": "Name of an existing EC2 KeyPair to enable SSH access to the NAT instance",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "NATInstanceType": {
            "AllowedValues": [
                "t2.nano",
                "t2.micro",
                "t2.small",
                "t2.medium",
                "t2.large",
                "m3.medium",
                "m3.large",
                "m4.large"
            ],
            "ConstraintDescription": "Must be a valid EC2 instance type",
            "Default": "t2.micro",
            "Description": "Amazon EC2 instance type for the NAT instances. This is used only if the region does not support NAT gateways",
            "Type": "String"
        },
        "NumberOfNodes": {
            "Default": "1",
            "Description": "Number of nodes in the redshift cluster(=1 if single-node)",
            "Type": "Number"
        },
        "PrivateSubnet1ID": {
            "Description": "Private Subnet Id 1",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "PrivateSubnet2ID": {
            "Description": "Private Subnet Id 2",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "PublicSubnet1ID": {
            "Description": "Public Subnet Id 1",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "PublicSubnet2ID": {
            "Description": "Public Subnet Id 2",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "QSS3BucketName": {
            "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$",
            "ConstraintDescription": "AWS Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Default": "quickstart-reference",
            "Description": "S3 bucket name for the AWS Quick Start assets.AWS Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Type": "String"
        },
        "QSS3KeyPrefix": {
            "AllowedPattern": "^[0-9a-zA-Z-/]*$",
            "ConstraintDescription": "Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).",
            "Default": "datalake/cloudwick/latest/",
            "Description": "S3 key prefix for the Quick Start assets. Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).",
            "Type": "String"
        },
        "RDSAllocatedStorage": {
            "ConstraintDescription": "RDSAllocatedStorage must be between 5 and 1024Gb.",
            "Default": "5",
            "Description": "Size of the database(Gb) Range: 5~1024Gb",
            "MaxValue": "1024",
            "MinValue": "5",
            "Type": "Number"
        },
        "RDSInstanceType": {
            "AllowedValues": [
                "db.t2.micro",
                "db.t2.small",
                "db.t2.medium",
                "db.t2.large",
                "db.m4.large",
                "db.m4.xlarge",
                "db.m4.2xlarge",
                "db.m4.4xlarge",
                "db.m4.10xlarge"
            ],
            "ConstraintDescription": "must select a valid RDS database class.",
            "Default": "db.t2.small",
            "Description": "Database instance class",
            "Type": "String"
        },
        "RedshiftClusterType": {
            "AllowedValues": [
                "single-node",
                "multi-node"
            ],
            "ConstraintDescription": "must select a valid Redshift cluster type.",
            "Default": "single-node",
            "Description": "Redshift instance type",
            "Type": "String"
        },
        "RedshiftNodeType": {
            "AllowedValues": [
                "dc1.large",
                "dw.hs1.xlarge",
                "dw1.xlarge",
                "dw1.8xlarge",
                "dw2.large",
                "dw2.8xlarge"
            ],
            "ConstraintDescription": "must select a valid Redshift node type.",
            "Default": "dc1.large",
            "Description": "Redshift node type",
            "Type": "String"
        },
        "VPCCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "ConstraintDescription": "Must be a valid IP range in x.x.x.x/x notation",
            "Description": "The CIDR IP range of VPC",
            "Type": "String"
        },
        "VPCID": {
            "Description": "VPC Id",
            "Type": "AWS::EC2::VPC::Id"
        }
    },
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "Network Configuration"
                    },
                    "Parameters": [
                        "VPCID",
                        "VPCCIDR",
                        "PrivateSubnet1ID",
						"PrivateSubnet2ID",
						"PublicSubnet1ID",
						"PublicSubnet2ID"
                    ]
                },
                {
                    "Label": {
                        "default": "Amazon RDS Configuration"
                    },
                    "Parameters": [
                        "RDSInstanceType",
                        "RDSAllocatedStorage",
                        "RDSDatabaseName",
                        "RDSUsername",
                        "RDSPassword"
                    ]
                },
                {
                    "Label": {
                        "default": "Elasticsearch Configuration"
                    },
                    "Parameters": [
                        "ElasticsearchInstanceType",
                        "ElasticsearchInstanceCount",
                        "ElasticsearchVolumeSize",
                        "ElasticsearchVolumeType"
                    ]
                },
                {
                    "Label": {
                        "default": "Amazon RedShift Configuration"
                    },
                    "Parameters": [
                        "RedshiftClusterType",
                        "RedshiftNodeType",
                        "NumberOfNodes"
                    ]
                },
                {
                    "Label": {
                        "default": "Amazon EC2 Configuration"
                    },
                    "Parameters": [
                        "KeyPairName",
                        "PortalInstanceType",
                        "NATInstanceType"
                    ]
                },
                {
                    "Label": {
                        "default": "Data Lake Administrator Configuration"
                    },
                    "Parameters": [
                        "AdministratorName",
                        "AdministratorEmail"
                    ]
                },
                {
                    "Label": {
                        "default": "AWS Quick Start Configuration"
                    },
                    "Parameters": [
                        "QSS3BucketName",
                        "QSS3KeyPrefix"
                    ]
                }
            ],
            "ParameterLabels": {
                "AdministratorEmail": {
                    "default": "Administrator Email"
                },
                "AdministratorName": {
                    "default": "Administrator Name"
                },
                "RDSDatabaseName": {
                    "default": "RDS Database Name"
                },
                "RDSUsername": {
                    "default": "RDS User Name"
                },
                "RDSPassword": {
                    "default": "RDS Password"
                },
                "ElasticsearchInstanceCount": {
                    "default": "Elasticsearch Instance count"
                },
                "ElasticsearchInstanceType": {
                    "default": "Elasticsearch Instance type"
                },
                "ElasticsearchVolumeSize": {
                    "default": "Elasticsearch Instance volume size"
                },
                "ElasticsearchVolumeType": {
                    "default": "Elasticsearch Instance volume type"
                },
                "PortalInstanceType": {
                    "default": "Data Lake Portal Instance Type"
                },
                "KeyPairName": {
                    "default": "Keypair Name"
                },
                "NATInstanceType": {
                    "default": "NAT Instance type"
                },
                "NumberOfNodes": {
                    "default": "Number of Amazon Redshift nodes"
                },
                "PrivateSubnet1CIDR": {
                    "default": "Private Subnet 1 CIDR"
                },
                "PrivateSubnet2CIDR": {
                    "default": "Private Subnet 2 CIDR"
                },
                "PublicSubnet1CIDR": {
                    "default": "Public Subnet 1 CIDR"
                },
                "PublicSubnet2CIDR": {
                    "default": "Public Subnet 2 CIDR"
                },
                "QSS3BucketName": {
                    "default": "AWS Quick Start S3 Bucket Name"
                },
                "QSS3KeyPrefix": {
                    "default": "AWS Quick Start S3 Key Prefix"
                },
                "RDSAllocatedStorage": {
                    "default": "RDS Allocated Storage"
                },
                "RDSInstanceType": {
                    "default": "RDS Instance Type"
                },
                "RedshiftClusterType": {
                    "default": "Redshift cluster type"
                },
                "RedshiftNodeType": {
                    "default": "Redshift node type"
                },
                "VPCCIDR": {
                    "default": "VPC CIDR"
                },
                "VPCID": {
                    "default": "VPC ID"
                }
            }
        }
    },
    "Conditions": {
        "IsMultiNodeCluster": {
            "Fn::Equals": [
                {
                    "Ref": "RedshiftClusterType"
                },
                "multi-node"
            ]
        }
    },
    "Mappings": {
        "RDSEngineVersionMapping": {
            "mysql": {
                "latest": "5.7"
            }
        }
    },
    "Resources": {
        "SecurityGroupStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Sub": "https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/datalake-security-groups.template"
                },
                "Parameters": {
                    "VPC": {
                        "Ref": "VPCID"
                    },
                    "VPCCIDR": {
                        "Ref": "VPCCIDR"
                    }
                }
            }
        },
        "LookerStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Sub": "https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/LookerAMILaunch.template"
                },
                "Parameters": {
                    "KeyName": {
                        "Ref": "KeyPairName"
                    },
                    "VpcId": {
                        "Ref": "VPCID"
                    },
                    "SubnetID": {
                        "Ref": "PublicSubnet1ID"
                    },
                    "SecurityGroupIds": {
                        "Fn::GetAtt": [
                            "SecurityGroupStack",
                            "Outputs.LookerSecurityGroup"
                        ]
                    },
                    "TagSuffix": {
                        "Fn::Select": [
                            "4",
                            {
                                "Fn::Split": [
                                    "-",
                                    {
                                        "Fn::Select": [
                                            "2",
                                            {
                                                "Fn::Split": [
                                                    "/",
                                                    {
                                                        "Ref": "AWS::StackId"
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                }
            }
        },
        "DatalakeResourceStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Sub": "https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/datalake-resources.template"
                },
                "Parameters": {
                    "PrivateSubnet1": {
                        "Ref": "PrivateSubnet1ID"
                    },
                    "PrivateSubnet2": {
                        "Ref": "PrivateSubnet2ID"
                    },
                    "DBName": {
                        "Ref": "RDSDatabaseName"
                    },
                    "MasterStackID": {
                        "Ref": "AWS::StackId"
                    },
                    "TagSuffix": {
                        "Fn::Select": [
                            "4",
                            {
                                "Fn::Split": [
                                    "-",
                                    {
                                        "Fn::Select": [
                                            "2",
                                            {
                                                "Fn::Split": [
                                                    "/",
                                                    {
                                                        "Ref": "AWS::StackId"
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    "AllocatedStorage": {
                        "Ref": "RDSAllocatedStorage"
                    },
                    "DBInstanceClass": {
                        "Ref": "RDSInstanceType"
                    },
                    "MasterUsername": {
                        "Ref": "RDSUsername"
                    },
                    "MasterUserPassword": {
                        "Ref": "RDSPassword"
                    },
                    "RDSVpcSecurityGroups": {
                        "Fn::GetAtt": [
                            "SecurityGroupStack",
                            "Outputs.RDSSecurityGroup"
                        ]
                    },
                    "NodeType": {
                        "Ref": "RedshiftNodeType"
                    },
                    "ClusterType": {
                        "Ref": "RedshiftClusterType"
                    },
                    "NumberOfNodes": {
                        "Ref": "NumberOfNodes"
                    },
                    "RedshiftVpcSecurityGroupIds": {
                        "Fn::GetAtt": [
                            "SecurityGroupStack",
                            "Outputs.RedshiftSecurityGroup"
                        ]
                    },
                    "PublicSubnet1": {
                        "Ref": "PublicSubnet1ID"
                    },
                    "PublicSubnet2": {
                        "Ref": "PublicSubnet2ID"
                    },
                    "InstanceType": {
                        "Ref": "PortalInstanceType"
                    },
                    "WebserverSecurityGroups": {
                        "Fn::GetAtt": [
                            "SecurityGroupStack",
                            "Outputs.WebserverSecurityGroup"
                        ]
                    },
                    "ELBSecurityGroups": {
                        "Fn::GetAtt": [
                            "SecurityGroupStack",
                            "Outputs.ELBSecurityGroup"
                        ]
                    },
                    "AdminEmailID": {
                        "Ref": "AdministratorEmail"
                    },
                    "QSS3BucketName": {
                        "Ref": "QSS3BucketName"
                    },
                    "QSS3KeyPrefix": {
                        "Ref": "QSS3KeyPrefix"
                    },
                    "LookerInstanceEndpoint": {
                        "Fn::GetAtt": [
                            "LookerStack",
                            "Outputs.PublicDNS"
                        ]
                    },
                    "ElasticsearchVolumeSize": {
                        "Ref": "ElasticsearchVolumeSize"
                    },
                    "ElasticsearchVolumeType": {
                        "Ref": "ElasticsearchVolumeType"
                    },
                    "ElasticsearchInstanceType": {
                        "Ref": "ElasticsearchInstanceType"
                    },
                    "ElasticsearchInstanceCount": {
                        "Ref": "ElasticsearchInstanceCount"
                    },
                    "KeyPairName": {
                        "Ref": "KeyPairName"
                    }
                }
            }
        }
    },
    "Outputs": {
        "DatalakeWebUrl": {
            "Description": "Datalake Webapp URL",
            "Value": {
				"Fn::GetAtt": [
					"DatalakeResourceStack",
					"Outputs.WebServerELBEndpoint"
				]
            }
        },
        "S3Bucket": {
            "Description": "S3 Bucket",
            "Value": {
                "Fn::GetAtt": [
                    "DatalakeResourceStack",
                    "Outputs.S3Bucket"
                ]
            }
        },
        "ElasticsearchEndpoint": {
            "Description": "Elasticsearch Endpoint",
            "Value": {
                "Fn::GetAtt": [
                    "DatalakeResourceStack",
                    "Outputs.ElasticsearchEndpoint"
                ]
            }
        },
        "WebServerELBEndpoint": {
            "Description": "Datalake WebServer ELB Endpoint",
            "Value": {
                "Fn::GetAtt": [
                    "DatalakeResourceStack",
                    "Outputs.WebServerELBEndpoint"
                ]
            }
        },
        "LambdaFunction": {
            "Description": "Lambda Function",
            "Value": {
                "Fn::GetAtt": [
                    "DatalakeResourceStack",
                    "Outputs.LambdaFunction"
                ]
            }
        },
        "RDSEndpoint": {
            "Description": "RDS endpoint",
            "Value": {
                "Fn::GetAtt": [
                    "DatalakeResourceStack",
                    "Outputs.RDSEndpoint"
                ]
            }
        },
        "RedshiftClusterEndpoint": {
            "Description": "Redshift Cluster endpoint",
            "Value": {
                "Fn::GetAtt": [
                    "DatalakeResourceStack",
                    "Outputs.RedshiftClusterEndpoint"
                ]
            }
        },
        "FirehoseDeliveryStream": {
            "Description": "Firehose delivery stream",
            "Value": {
                "Fn::GetAtt": [
                    "DatalakeResourceStack",
                    "Outputs.FirehoseDeliveryStream"
                ]
            }
        },
        "CloudTrail": {
            "Description": "CloudTrail",
            "Value": {
                "Fn::GetAtt": [
                    "DatalakeResourceStack",
                    "Outputs.CloudTrail"
                ]
            }
        }
    }
}
